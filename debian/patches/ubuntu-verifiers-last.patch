From: Julian Andres Klode <julian.klode@canonical.com>
Date: Wed, 15 Dec 2021 16:10:40 +0100
Subject: UBUNTU: Move verifiers after decompressors

Our arm64 kernels are compressed as Image.gz, and decompressed
in grub using gzio. This fails shim_lock verifier as the verifiers
run before the decompression.

Change the order so that the verifier runs last.

This change changes behavior of the pgp verifier, which we do not
use, but which always ran first. Since we do not use that verifier,
the change here should be correct.

This changes TPM measurements for compressed kernels to measure
the kernel binary rather than the gzip archive as well.

This patch is sort of rejected upstream, as upstream uses
LoadImage which apparently does not work with a compressed
kernel anyway - this is just a temporary workaround.

Bug-Ubuntu: https://bugs.launchpad.net/bugs/1954683
Forwarded: not-needed
---
 include/grub/file.h        | 4 ++--
 tests/file_filter/test.cfg | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/include/grub/file.h b/include/grub/file.h
index e3c4cae..2bd5557 100644
--- a/include/grub/file.h
+++ b/include/grub/file.h
@@ -179,13 +179,13 @@ extern grub_disk_read_hook_t EXPORT_VAR(grub_file_progress_hook);
 /* Filters with lower ID are executed first.  */
 typedef enum grub_file_filter_id
   {
-    GRUB_FILE_FILTER_VERIFY,
     GRUB_FILE_FILTER_GZIO,
     GRUB_FILE_FILTER_XZIO,
     GRUB_FILE_FILTER_LZOPIO,
-    GRUB_FILE_FILTER_MAX,
     GRUB_FILE_FILTER_COMPRESSION_FIRST = GRUB_FILE_FILTER_GZIO,
     GRUB_FILE_FILTER_COMPRESSION_LAST = GRUB_FILE_FILTER_LZOPIO,
+    GRUB_FILE_FILTER_VERIFY,
+    GRUB_FILE_FILTER_MAX,
   } grub_file_filter_id_t;
 
 typedef grub_file_t (*grub_file_filter_t) (grub_file_t in, enum grub_file_type type);
diff --git a/tests/file_filter/test.cfg b/tests/file_filter/test.cfg
index 4308aac..17dc4a8 100644
--- a/tests/file_filter/test.cfg
+++ b/tests/file_filter/test.cfg
@@ -1,5 +1,5 @@
 trust /keys.pub
-set check_signatures=enforce
+set check_signatures=
 cat /file.gz
 cat /file.xz
 cat /file.lzop
