From: Didier Roche <didrocks@ubuntu.com>
Date: Tue, 31 Mar 2020 15:17:45 +0200
Subject: Generate configuration for signed UEFI kernels if available

Forwarded: no
Last-Update: 2013-12-25

Patch-Name: mkconfig-signed-kernel.patch
---
 util/grub.d/10_linux.in     | 15 +++++++++++++++
 util/grub.d/10_linux_zfs.in | 21 +++++++++++++++++++++
 2 files changed, 36 insertions(+)

diff --git a/util/grub.d/10_linux.in b/util/grub.d/10_linux.in
index 19e4df4..cb1cc20 100644
--- a/util/grub.d/10_linux.in
+++ b/util/grub.d/10_linux.in
@@ -165,8 +165,16 @@ linux_entry ()
   message="$(gettext_printf "Loading Linux %s ..." ${version})"
   sed "s/^/$submenu_indentation/" << EOF
 	echo	'$(echo "$message" | grub_quote)'
+EOF
+  if test -d /sys/firmware/efi && test -e "${linux}.efi.signed"; then
+    sed "s/^/$submenu_indentation/" << EOF
+	linux	${rel_dirname}/${basename}.efi.signed root=${linux_root_device_thisversion} ro ${args}
+EOF
+  else
+    sed "s/^/$submenu_indentation/" << EOF
 	linux	${rel_dirname}/${basename} root=${linux_root_device_thisversion} ro ${args}
 EOF
+  fi
   if test -n "${initrd}" ; then
     # TRANSLATORS: ramdisk isn't identifier. Should be translated.
     message="$(gettext_printf "Loading initial ramdisk ...")"
@@ -218,6 +226,13 @@ submenu_indentation=""
 is_top_level=true
 while [ "x$list" != "x" ] ; do
   linux=`version_find_latest $list`
+  case $linux in
+    *.efi.signed)
+      # We handle these in linux_entry.
+      list=`echo $list | tr ' ' '\n' | grep -vx $linux | tr '\n' ' '`
+      continue
+      ;;
+  esac
   gettext_printf "Found linux image: %s\n" "$linux" >&2
   basename=`basename $linux`
   dirname=`dirname $linux`
diff --git a/util/grub.d/10_linux_zfs.in b/util/grub.d/10_linux_zfs.in
index 7f88e77..bd4f1a2 100755
--- a/util/grub.d/10_linux_zfs.in
+++ b/util/grub.d/10_linux_zfs.in
@@ -339,6 +339,16 @@ try_default_layout_bpool() {
     validate_system_dataset "${candidate_dataset}" "boot" "${mntdir}" "${snapshot_name}"
 }
 
+# Return if secure boot is enabled on that system
+is_secure_boot_enabled() {
+    if LANG=C mokutil --sb-state 2>/dev/null | grep -qi enabled; then
+        echo "true"
+        return
+    fi
+    echo "false"
+    return
+}
+
 # Given a filesystem or snapshot dataset, returns dataset|machine id|pretty name|last used
 # $1 is dataset we want information from
 # $2 is the temporary mount directory to use
@@ -412,6 +422,17 @@ get_dataset_info() {
             continue
         fi
 
+        # Filters entry if efi/non efi.
+        # Note that for now we allow kernel without .efi.signed as those are signed kernel
+        # on ubuntu, loaded by the shim.
+        case "${linux}" in
+            *.efi.signed)
+                if [ "$(is_secure_boot_enabled)" = "false" ]; then
+                    continue
+                fi
+            ;;
+        esac
+
         linux_basename=$(basename "${linux}")
         linux_dirname=$(dirname "${linux}")
         version=$(echo "${linux_basename}" | sed -e "s,^[^0-9]*-,,g")
